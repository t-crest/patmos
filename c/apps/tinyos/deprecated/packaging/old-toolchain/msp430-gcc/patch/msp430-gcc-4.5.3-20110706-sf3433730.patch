From 051fdf4d77fb1a8d81c5651ee069271575dca8d2 Mon Sep 17 00:00:00 2001
From: "Peter A. Bigot" <pabigot@users.sourceforge.net>
Date: Sat, 5 Nov 2011 09:31:47 -0500
Subject: [PATCH] SF 3433730 Bug when casting function parameters

Permit stack and frame pointers to serve as source operands in insns that
might involve ptrdiff or mask calculations with a QImode destination.
---
 gcc/config/msp430/msp430.md                 |   12 ++++++------
 gcc/testsuite/gcc.target/msp430/sf3433730.c |   14 ++++++++++++++
 2 files changed, 20 insertions(+), 6 deletions(-)
 create mode 100644 gcc/testsuite/gcc.target/msp430/sf3433730.c

diff --git a/gcc/config/msp430/msp430.md b/gcc/config/msp430/msp430.md
index 9417151..eb5264a 100644
--- a/gcc/config/msp430/msp430.md
+++ b/gcc/config/msp430/msp430.md
@@ -170,8 +170,8 @@
    (DI "=&r,m")])	       ; DImode inhibits early clobber
 
 (define_mode_attr INTModes_constraint_src
-  [(QI "rmi")		       ; QI, HI, SI, DI allow anything
-   (HI "rmi")
+  [(QI "Umi")		       ; QI, HI allow anything
+   (HI "Umi")		       ; SI, DI remove frame and stack pointer
    (SI "rmi,rmi")
    (DI "rmi,rmi")])
 
@@ -196,8 +196,8 @@
    (DI "=&r,m")])	       ; DImode inhibits early clobber
 
 (define_mode_attr INTModes_frameok_src
-  [(QI "rmi")		       ; QI, SI, DI allow anything
-   (HI "Umi")		       ; HImode allows frame and stack pointer
+  [(QI "Umi")		       ; QI, HI allow anything
+   (HI "Umi")		       ; SI, DI remove frame and stack pointer
    (SI "rmi,rmi")
    (DI "rmi,rmi")])
 
@@ -409,7 +409,7 @@
 
 (define_insn "movqi_zero_extend"
   [(set (match_operand:HI 0 "register_operand" "=r")
-	(zero_extend:HI (match_operand:QI 1 "msp430_vwa_general_operand" "rmi")))]
+	(zero_extend:HI (match_operand:QI 1 "msp430_vwa_general_operand" "Umi")))]
   ""
   "mov.b\t%1, %0"
   [(set_attr "cc" "none")
@@ -417,7 +417,7 @@
 
 (define_insn "*movqi2"
   [(set (match_operand:QI 0 "msp430_vwa_nonimmediate_operand" "=rm")
-	(match_operand:QI 1 "msp430_vwa_general_operand" "rmi"))]
+	(match_operand:QI 1 "msp430_vwa_general_operand" "Umi"))]
   ""
   "mov.b\t%1, %0"
   [(set_attr "cc" "none")
diff --git a/gcc/testsuite/gcc.target/msp430/sf3433730.c b/gcc/testsuite/gcc.target/msp430/sf3433730.c
new file mode 100644
index 0000000..b8d114f
--- /dev/null
+++ b/gcc/testsuite/gcc.target/msp430/sf3433730.c
@@ -0,0 +1,14 @@
+/* { dg-do compile } */
+/* { dg-options "-O2" } */
+
+extern unsigned int strlen (const char *s);
+void setval (char* str, int len);
+void useval (const char* str, unsigned char len);
+
+void tryit ()
+{
+  char tmp[17];
+  setval (tmp, sizeof(tmp));
+  useval (tmp, strlen(tmp));
+  /* { dg-final { scan-assembler "sub.b\tr1, r14\n\tmov\tr1, r15\n\tcall\t#useval" } } */
+}
-- 
1.7.6.4

