
The RF230 radio driver has the following configuration options. Some of
these are set in the platforms/xxx/chips/rf230/RadioConfig.h header file,
see the IRIS platform for example, others can be set in your Makefile.

RF230_TRX_CTRL_0_VALUE:

This is the value of the TRX_CTRL_0 register which configures the output
pin currents and the CLKM clock:

RF230_CCA_MODE_VALUE:

This is the default value of the CCA_MODE field in the PHY_CC_CCA register
which is used to configure the default mode of the clear channel assesment

RF230_CCA_THRES_VALUE:

This is the value of the CCA_THRES register that controls the energy levels
used for clear channel assesment.

RF230_DEF_RFPOWER:

This is the default value of the TX_PWR field of the PHY_TX_PWR register.
This can be cahanged via the PacketTransmitPower interface provided by the
RF230ActiveMessageC.

RF230_DEF_CHANNEL:

This is the default value of the CHANNEL field of the PHY_CC_CCA register.
This can be cahanged via the RadioChannel interface provided by the
RF230ActiveMessageC.

RF230_CRCBYTE_COMMAND:

This is the command used to calculate the CRC for the RF230 chip, since it
does not support hardware CRC checking (in rev A).

RF230_SLOW_SPI:

Define this if your microcontroller SPI interface is slower than 250
kbit/s. This delays the start of transmission untill the whole packet
is uploaded except for the last few bytes for time sync messages.

RF230_RSSI_ENERGY:

If you define this, then the content of the RF230_PHY_ED_LEVEL is queried
instead of the RSSI value for eahc incoming message. This value can be
obtained with the PacketRSSI interface.

RF230_HARDWARE_ACK

If you define this, then the radio stack will use hardware acknowledgements
and address recognition. In particular, you will not be able to snoop on
onther messages. The load on the CPU is reduced, you should be able to send
more messages under heavy load. Note, that the PacketRSSI interface will
return the energy level (and not the rssi value) of received packet.

RF230_HWACK_SLOPPY_TIMESTAMP

If you define this, then the code that calculates the time stamp of the SFD
from a single interrupt at the end of the message reception will not use
floating point computation, which will be faster but less precise.

RF230_BACKOFF_MIN
RF230_BACKOFF_INIT
RF230_BACKOFF_CONG

The minimum backoff time, the initial backoff time, and the cognestion backoff
time in microseconds for the random CSMA/CA algorithm. See the RF230RadioP.nc.

RF230_HWACK_64BIT

Enables 64 bit addressing. Basicly, just loads the 64 bit address during init
from LocalIeeeEui64C, it doesn't change the address length of the stack. It is
disabled by default, because some platforms might not provide LocalIeeeEui64.